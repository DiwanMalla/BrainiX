model Blog {
  id          String      @id @default(cuid())
  slug        String      @unique
  title       String
  content     String      @db.Text
  excerpt     String?     @db.Text
  thumbnail   String?
  status      BlogStatus  @default(DRAFT)
  publishedAt DateTime?
  authorId    String
  author      User        @relation("BlogAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  tags        String[]
  totalViews  Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  comments    BlogComment[]
  likes       BlogLike[]

  @@index([authorId])
  @@index([slug])
}

model BlogComment {
  id        String        @id @default(cuid())
  content   String        @db.Text
  blogId    String
  blog      Blog         @relation(fields: [blogId], references: [id], onDelete: Cascade)
  userId    String
  user      User         @relation("BlogCommentUser", fields: [userId], references: [id], onDelete: Cascade)
  parentId  String?
  parent    BlogComment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies   BlogComment[] @relation("CommentReplies")
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  likes     BlogCommentLike[]

  @@index([blogId])
  @@index([userId])
  @@index([parentId])
}

model BlogCommentLike {
  id        String      @id @default(cuid())
  commentId String
  comment   BlogComment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())

  @@unique([commentId, userId])
  @@index([commentId])
  @@index([userId])
}

model BlogLike {
  id        String   @id @default(cuid())
  blogId    String
  blog      Blog    @relation(fields: [blogId], references: [id], onDelete: Cascade)
  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([blogId, userId])
  @@index([blogId])
  @@index([userId])
}

enum BlogStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
